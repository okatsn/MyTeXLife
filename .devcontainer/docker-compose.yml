version: "3.8"

services:
  vscode:
    build:
      context: .
      #     That is out of /.devcontainer
      # context: .
      #     That is /.devcontainer
      dockerfile: Dockerfile
      args:
        WORKSPACE_DIR: /workspace
        SUB_PROJECT_DIR: /workspace/projects
        # SETME: make this consistent with that in devcontainer.json
        # SUB_PROJECT_DIR is intended for you to easily go there for cloning your projects,
        # i.e., cd $SUB_PROJECT_DIR
        NB_UID: ${NB_UID}
        NB_GID: ${NB_GID}
        NB_USER: ${NB_USER}
        PSWD: ${PSWD}
    # Better not to have duplicate image name
    image: latexdevcontainer
    init: true
    # See https://docs.docker.com/compose/compose-file/compose-file-v3/#init

    # Better not to have duplicate container name. Error "Conflict will occur if another. The container name "/tex-with-julia" is already in use by container" might occur if there is another container of the same name is currently running.
    container_name: my-tex
    volumes:
      # # The home directory is called "workspace"; try `cd ..` and `ls` to figure it out.
      - ../:/workspace
      # # Docker socket to access Docker server
      - /var/run/docker.sock:/var/run/docker.sock
      # # SSH directory
      - ~/.ssh:/home/jovyan/.ssh
      # For Windows without WSL, a copy will be made from /tmp/.ssh to ~/.ssh to fix permissions
      # - ~/.ssh:/tmp/.ssh:ro
      # # Shell history persistence
      - ~/.zsh_history:/home/jovyan/.zsh_history:z
      # # Git config
      - ~/.gitconfig:/home/jovyan/.gitconfig #
      # # KEYNOTE: Choose volume type for vscode extensions
      # # **A Named Volume**: Docker manages the volume and associates it with the specified path inside the container (/home/jovyan/.vscode-server). It can help avoid permission issues, as Docker handles the ownership and permissions of the volume. The data may not be as easily accessible from the host, as it is managed by Docker. For every named volume, the name should be added to global volumes as below.
      - vscode-server:/home/jovyan/.vscode-server
      # # **A Bind Mount**: This mounts the `~/.vscode-server` in host (e.g., \\wsl.localhost\Ubuntu-20.04\home\okatsn\.vscode-server) into `/home/jovyan/.vscode-server` in the container. Adding/Removing VSCode extensions in either VSCode WSL (Ctrl+Shift+P Open Folder in WSL) or in VSCode Dev. container will result in the change of the host machine's ~/.vscode-server (you can take a look at how .vscode-server/extensions/extensions.json changed).
      # - ~/.vscode-server:/home/jovyan/.vscode-server
      # # Noted the context of the local host (i.e., WSL) is different from that in the container;
      # # this is why there is an additional `~/` here for the host (on the left).
      #
      # # KEYNOTE:
      # # - Named volumes is chosen because VSCode extensions of my-tex-life should not be shared with those in WSL.
      # # - For both Bind Mount and Named Volume, permission of accessing VSCODE_PATH for NB_USER is required. See commit message e6c848cf.
    environment:
      - TZ=TW
      # Set time zone
      # entrypoint: ["zsh", "-c", "while sleep 1000; do :; done"]
    entrypoint: sh -c "sleep infinity"
# # KEYNOTE: Those defined volumes in service should be declared in the root level
# Unbind vscode-server to volumes to ensure extensions in devcontainer.json to be installed on rebuild
volumes:
  vscode-server:
